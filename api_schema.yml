openapi: 3.0.3
info:
  title: Task manager API
  version: 1.0.0
  description: "Training API project (DRF, OpenAPI Schema, Swagger UI). \n    Please\
    \ create a new user and log in through basicAuth to be able to work with statuses,\
    \ labels and tasks."
paths:
  /api/v1/labels/:
    get:
      operationId: labels_list
      description: |-
        Only authenticateed user can CRUD labels.
        A label associated with a task cannot be deleted.
      tags:
      - labels
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Label'
          description: ''
    post:
      operationId: labels_create
      description: |-
        Only authenticateed user can CRUD labels.
        A label associated with a task cannot be deleted.
      tags:
      - labels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Label'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
  /api/v1/labels/{id}/:
    get:
      operationId: labels_retrieve
      description: |-
        Only authenticateed user can CRUD labels.
        A label associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this label.
        required: true
      tags:
      - labels
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    put:
      operationId: labels_update
      description: |-
        Only authenticateed user can CRUD labels.
        A label associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this label.
        required: true
      tags:
      - labels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Label'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    patch:
      operationId: labels_partial_update
      description: |-
        Only authenticateed user can CRUD labels.
        A label associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this label.
        required: true
      tags:
      - labels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    delete:
      operationId: labels_destroy
      description: |-
        Only authenticateed user can CRUD labels.
        A label associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this label.
        required: true
      tags:
      - labels
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/statuses/:
    get:
      operationId: statuses_list
      description: |-
        Only authenticateed user can CRUD statuses.
        A status associated with a task cannot be deleted.
      tags:
      - statuses
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
          description: ''
    post:
      operationId: statuses_create
      description: |-
        Only authenticateed user can CRUD statuses.
        A status associated with a task cannot be deleted.
      tags:
      - statuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
  /api/v1/statuses/{id}/:
    get:
      operationId: statuses_retrieve
      description: |-
        Only authenticateed user can CRUD statuses.
        A status associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this status.
        required: true
      tags:
      - statuses
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    put:
      operationId: statuses_update
      description: |-
        Only authenticateed user can CRUD statuses.
        A status associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this status.
        required: true
      tags:
      - statuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Status'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Status'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    patch:
      operationId: statuses_partial_update
      description: |-
        Only authenticateed user can CRUD statuses.
        A status associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this status.
        required: true
      tags:
      - statuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStatus'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
    delete:
      operationId: statuses_destroy
      description: |-
        Only authenticateed user can CRUD statuses.
        A status associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this status.
        required: true
      tags:
      - statuses
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/tasks/:
    get:
      operationId: tasks_list
      description: |-
        Only authenticateed user can CRUD tasks.
        A task can only be deleted by its author.
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
    post:
      operationId: tasks_create
      description: |-
        Only authenticateed user can CRUD tasks.
        A task can only be deleted by its author.
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
  /api/v1/tasks/{id}/:
    get:
      operationId: tasks_retrieve
      description: |-
        Only authenticateed user can CRUD tasks.
        A task can only be deleted by its author.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    put:
      operationId: tasks_update
      description: |-
        Only authenticateed user can CRUD tasks.
        A task can only be deleted by its author.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    patch:
      operationId: tasks_partial_update
      description: |-
        Only authenticateed user can CRUD tasks.
        A task can only be deleted by its author.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
    delete:
      operationId: tasks_destroy
      description: |-
        Only authenticateed user can CRUD tasks.
        A task can only be deleted by its author.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/:
    get:
      operationId: user_list
      description: |-
        An anonymous user can create, retrieve and list users.
        Only the user himself can change or delete his account.
        A user associated with a task cannot be deleted.
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: user_create
      description: |-
        An anonymous user can create, retrieve and list users.
        Only the user himself can change or delete his account.
        A user associated with a task cannot be deleted.
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/user/{id}/:
    get:
      operationId: user_retrieve
      description: |-
        An anonymous user can create, retrieve and list users.
        Only the user himself can change or delete his account.
        A user associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: user_update
      description: |-
        An anonymous user can create, retrieve and list users.
        Only the user himself can change or delete his account.
        A user associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: user_partial_update
      description: |-
        An anonymous user can create, retrieve and list users.
        Only the user himself can change or delete his account.
        A user associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: user_destroy
      description: |-
        An anonymous user can create, retrieve and list users.
        Only the user himself can change or delete his account.
        A user associated with a task cannot be deleted.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this пользователь.
        required: true
      tags:
      - user
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Label:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Имя
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
    PatchedLabel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Имя
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Имя
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: integer
          readOnly: true
        name:
          type: string
          title: Имя
          maxLength: 150
        description:
          type: string
          title: Описание
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        status:
          type: integer
          title: Статус
        executor:
          type: integer
          nullable: true
          title: Исполнитель
        labels:
          type: array
          items:
            type: integer
            title: Метки
          title: Метки
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        date_joined:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
        password:
          type: string
          writeOnly: true
          title: Пароль
          maxLength: 128
        author_set:
          type: array
          items:
            type: integer
          readOnly: true
        executor_set:
          type: array
          items:
            type: integer
          readOnly: true
    Status:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Имя
          maxLength: 100
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: integer
          readOnly: true
        name:
          type: string
          title: Имя
          maxLength: 150
        description:
          type: string
          title: Описание
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        status:
          type: integer
          title: Статус
        executor:
          type: integer
          nullable: true
          title: Исполнитель
        labels:
          type: array
          items:
            type: integer
            title: Метки
          title: Метки
      required:
      - author
      - created_at
      - id
      - name
      - status
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Имя пользователя
          description: Обязательное поле. Не более 150 символов. Только буквы, цифры
            и символы @/./+/-/_.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          title: Имя
          maxLength: 150
        last_name:
          type: string
          title: Фамилия
          maxLength: 150
        date_joined:
          type: string
          format: date-time
          readOnly: true
          title: Дата регистрации
        password:
          type: string
          writeOnly: true
          title: Пароль
          maxLength: 128
        author_set:
          type: array
          items:
            type: integer
          readOnly: true
        executor_set:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - author_set
      - date_joined
      - executor_set
      - id
      - password
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
